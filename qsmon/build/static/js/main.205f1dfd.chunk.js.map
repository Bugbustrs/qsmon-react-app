{"version":3,"sources":["containers/Layout.js","components/measurements/measurement_list.js","components/utils/measurement_utils.js","components/measurements/address_form.js","components/measurements/tcp_speed_test_form.js","components/measurements/job_description.js","components/measurements/measurements_home.js","components/header.js","components/results/results_list.js","components/results/dns/dns_detail.js","components/results/dns/dns_graph.js","components/results/dns/dns_wrapper.js","components/results/results_home.js","App.js","serviceWorker.js","index.js"],"names":["FixedContainer","props","react_default","a","createElement","Container","children","measurementList","className","react_router_dom","to","getKey","Math","random","toString","substring","formatDate","date","Date","toISOString","format","val","Description","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","address","Fragment","htmlFor","onChange","changeHandler","value","type","name","id","aria-describedby","placeholder","React","Component","tcp_speed_test","checked","selected","handleChange1","e","target","console","log","setState","defineProperty","handleSubmit","preventDefault","data","job_description","measurement_description","key","start_time","end_time","interval_sec","priority","parameters","server","direction","node_count","job_interval","request_type","user_id","axios","post","cors","then","res","location","pathname","count","handleChange","bind","assertThisInitialized","event","output","startsWith","Form","address_form_Description","now","min_date","getFullYear","getMonth","getDate","getHours","getMinutes","onSubmit","/tcp_speed_test","/ping","/dns_lookup","/traceroute","/http","min","MeasurementList","Row","Col","md","react_router","exact","path","render","job_description_Description","header","data-toggle","data-target","resultList","dns_detail","values","real_hostname","time_ms","map","item","index","JSON","stringify","undefined","dns_graph","uv","pv","amt","renderLineChart","es6","syncId","width","height","margin","top","right","bottom","left","dataKey","stroke","strokeDasharray","barSize","fill","Wrapper","onClickHandler","newTitle","showGraph","title","onClick","component","List","DNSResult","DNSGraph","App","Measurements","Results","Boolean","window","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.205f1dfd.chunk.js","sourcesContent":["import React from 'react';\nimport {Container} from 'react-bootstrap'\n\nexport default function FixedContainer(props) {\n  return (\n\n    <Container>\n       <br></br>\n      <br></br>\n   \n     \n  {props.children}\n\n   \n</Container>\n  );\n};","import React from 'react';\nimport { NavLink} from 'react-router-dom';\nexport default function measurementList() {\n\n\n    return (\n      <div>\n      <ul className=\"nav flex-column\">\n  <NavLink className=\"list-group-item list-group-item-action\" to='/traceroute'>trace route</NavLink> \n  <NavLink className=\"list-group-item list-group-item-action\" to='/ping'>ping</NavLink>\n  <NavLink className=\"list-group-item list-group-item-action\" to='/dns_lookup'>DNS Lookup</NavLink>\n  <NavLink className=\"list-group-item list-group-item-action\" to='/http'>HTTP</NavLink>\n  <NavLink className=\"list-group-item list-group-item-action\" to='/tcp_speed_test'>TCP Speed Test</NavLink>\n</ul>\n<br></br>\n</div>\n    );\n  }","\nfunction getKey()\n{\n  return Math.random().toString(36).substring(2, 16) + Math.random().toString(36).substring(2, 16);\n}\n\n\nconst formatDate = date =>{\n  return new Date(date).toISOString();\n}\n/*\ngenerates a post request object from the state of the app\n*/\nfunction getPostObject(state)\n{\n\nlet measurement_description = { \n            type:state.type,\n            key:getKey(),\n            start_time:formatDate(state.start_time),\n            end_time:formatDate(state.end_time),\n            interval_sec:state.interval_sec,\n            priority:state.priority,\n          parameters:{\n           target:state.target,\n           server:\"null\",\n           direction:state.tcp_speed_test,   \n          }\n          };\nlet job_description = {\n  measurement_description,\n  node_count:state.node_count,\n  job_interval:state.job_interval\n}\n\nlet result={job_description, request_type:\"SCHEDULE_MEASUREMENT\" ,user_id:getKey(), };\n\nreturn result;\n}\n\nlet format =val =>{\n  return val>9?val:'0'+val;\n};\n\nconst getType = type  =>{\nconst map ={\"/tcp_speed_test\":\"TCP Speed Test\",'/ping':\"Ping Test\",\"/dns_lookup\":\"DNS Lookup Test\",'/traceroute':'Traceroute Test','/http':'HTTP Test'};\n\nreturn map[type];\n}\n\nexport  {format,getKey,getPostObject,getType}","import React from 'react';\n\n\n\n\nexport default class Description extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.state={address:\"\"    };\n\n  }\n\n\n\n\n  render(){\n    \n    return (\n\n      <React.Fragment>\n     \n      <div className=\" text-left form-group\">\n        <label className=\"text-left\" htmlFor=\"address\">web address</label>\n        <input onChange={this.props.changeHandler} value={this.props.value}  type=\"url\" name='address' className=\"form-control\" id=\"address\" aria-describedby=\"emailHelp\" placeholder=\"www.example.com\" />\n      </div>\n    <div className=\"text-left\">\n      <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n      </div>\n  \n    </React.Fragment>\n    )\n  }\n}","import React from 'react';\n\n\nexport default function tcp_speed_test(props)\n{\nreturn (\n    <React.Fragment>\n        \n        <br></br>\n      <div className='form-group text-center'>\n    <div  className=\"custom-control custom-radio custom-control-inline\">\n      <input value='down' onChange={props.changeHandler} type=\"radio\" className=\"custom-control-input\" id=\"down\" name=\"tcp_speed_test\" checked ={props.selected==='down'}/>\n      <label className=\"custom-control-label\" htmlFor=\"down\">Down</label>\n    </div>\n    <div className=\"custom-control custom-radio custom-control-inline\">\n      <input value='up' onChange={props.changeHandler} type=\"radio\" className=\"custom-control-input\" id=\"up\" name=\"tcp_speed_test\" checked ={props.selected==='up'}/>\n      <label className=\"custom-control-label\" htmlFor=\"up\">Up</label>\n    </div>\n    <br></br>\n  \n    <br></br>\n    <div className=''>\n    <button type=\"submit\" className=\" btn btn-primary btn-lg\">run</button>\n\n    </div>\n    </div>\n  \n\n</React.Fragment>);\n}","import React from 'react';\nimport {format, getPostObject, getType} from '../utils/measurement_utils';\nimport axios from 'axios';\nimport AddressForm from './address_form';\nimport RadioForm from './tcp_speed_test_form';\n\nexport default class Description extends React.Component\n{\n  constructor(props)\n  {\n    super(props);\n    this.state={\n      type:this.props.location.pathname.substring(1,),\n            start_time:\"\",\n            end_time:\"\",\n            interval_sec:1,\n            count:2,\n            priority:5,\n            target:\"\",\n            node_count:\"\",\n            job_interval:\"\",\n            tcp_speed_test:\"down\"\n };\nconsole.log(this.props.location.pathname);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n\n  handleChange(event)\n{\n  let output =\"\";\n  if(!event.target.value.startsWith(\"http\"))\n    output = \"https://\"+event.target.value;\n  else\noutput =event.target.value;\nthis.setState({\n  target:output\n});\n}\n\n\n\nhandleChange1 = e =>{\n  if(e.target.name==='tcp_speed_test') console.log('tcp_speed_test:'+e.target.value);\n  this.setState({[e.target.name]:e.target.value})\n}\n\nhandleSubmit = e =>{\n  e.preventDefault();\n  \n  console.log(this.state);\n  let data = getPostObject(this.state);\n  console.log(data)\n  let cors = 'https://cors-anywhere.herokuapp.com/';\n  axios.post(cors+'http://ptsv2.com/t/toileet/post',data).then(res=>{\n    console.log(res);\n  });\n}\n\n  render(){\n    let Form = (this.props.location.pathname ===\"/tcp_speed_test\")?<RadioForm selected={this.state.tcp_speed_test} changeHandler={this.handleChange1}/>: <AddressForm value ={this.state.target} changeHandler ={this.handleChange}/>;\n    let date = new Date(Date.now());\n    let min_date = date.getFullYear()+'-'+format(date.getMonth()+1)+'-'+(format(date.getDate()))+\"T\"+format(date.getHours())+':'+(format((date.getMinutes()-1)));\n\n    return (\n\n      <React.Fragment>\n      <form className =\"jumbotron\" onSubmit={this.handleSubmit}>\n        <h5  className=\"text-left\">{getType(this.props.location.pathname)}</h5>\n        <br></br>\n        \n        <div className=\"form-group\">\n\n        <div className=\" form-row\">\n        <div className='col-md-6 col-10 text-left'>\n    <label htmlFor=\"node_count\">node count</label>\n    <input value={this.state.node_count} onChange={this.handleChange1} className ='form-control' type=\"number\" name=\"node_count\" placeholder='number of nodes to run job on'/>\n    </div>\n    <div className='col-md-6 col-10 text-left'>\n    <label htmlFor=\"job_interval\">job interval</label>\n    <input value={this.state.job_interval} onChange={this.handleChange1}  className ='form-control' type=\"number\" name=\"job_interval\" placeholder='enter a number'/>\n    </div>\n    \n     </div>\n        <div className=\" form-row\">\n    <div className='col-md-6 col-10 text-left'>\n    <label htmlFor=\"priority\">Priority</label>\n    <select value={this.state.priority} onChange={this.handleChange1}  className=\"form-control\" name=\"priority\">\n      <option>1</option>\n      <option>2</option>\n      <option>3</option>\n      <option>4</option>\n      <option>5</option>\n      <option>6</option>\n      <option>7</option>\n      <option>8</option>\n      <option>9</option>\n      <option>10</option>\n    </select>\n    </div>\n    <div className='col-md-6 col-10 text-left'>\n    <label htmlFor=\"interval_sec\">Interval between measurements</label>\n    <input value={this.state.interval_sec} onChange={this.handleChange1}  className ='form-control' type=\"number\" name=\"interval_sec\" placeholder='enter a number'/>\n    </div>\n  </div>\n        </div>\n        <div className=\" form-row\">\n    <div className=\"col-md-6 col-10 text-left\">\n    <label htmlFor=\"start_time\" >start date and time</label>\n\n      <input value={this.state.start_time} onChange={this.handleChange1}  type=\"datetime-local\" id='start_time' name='start_time' min={min_date} className=\"form-control\" />\n    </div>\n    <div className=\"col-md-6 col-10 text-left\">\n    <label htmlFor=\"end_time\">end date and time</label>\n\n      <input value={this.state.end_time} onChange={this.handleChange1}   type=\"datetime-local\"  id='end_time' name='end_time' min={min_date} className=\"form-control\" />\n    </div>\n  </div>\n<br/>\n {Form}  \n    </form> \n    </React.Fragment>\n    )\n  }\n}","import React from 'react';\nimport {Container,Col, Row} from 'react-bootstrap'\nimport List from './measurement_list';\n\nimport JobDescription from './job_description';\n\nimport {BrowserRouter, Route } from 'react-router-dom';\n\n\n\nexport default function MeasurementList() {\n\n\n  return (\n    <BrowserRouter>\n  <Container>\n    <Row>\n      <Col md='3'><List/></Col>\n      <Col md='9'>\n        <Route exact path='/ping' render={(type)=>(<JobDescription  {...type}   />)} />\n        <Route path='/dns_lookup' render={(type)=>(<JobDescription  {...type}   />)} />\n        <Route path='/traceroute' render={(type)=>(<JobDescription  {...type}   />)} />\n        <Route path='/http' render={(type)=>(<JobDescription  {...type}   />)} />\n        <Route path='/tcp_speed_test' render={(type)=>(<JobDescription  {...type}   />)} />\n\n       </Col>\n\n    </Row>\n  </Container>\n  </BrowserRouter>\n  );\n}\n","import React from 'react';\nimport { NavLink} from 'react-router-dom';\n\nexport default function header(){\n    return (\n        <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\n        <NavLink className=\"navbar-brand\" to=\"#\">QSMON Platform</NavLink>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse justify-content-end\" id=\"collapsibleNavbar\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/run_measurements\">Run measurements</NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/view_results\">View results</NavLink>\n            </li>\n          \n          </ul>\n          <ul className='navbar-nav '>\n          <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"logout\">logout</NavLink>\n            </li>   \n          </ul>\n        </div>  \n      </nav> \n    );\n}","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nexport default function resultList ()\n{\n    return(\n<ul className=\"list-group \">\n  <li className=\"list-group-item \"><NavLink className=\"list-group-item list-group-item-action\" to='/results/ping'>Ping Results</NavLink></li>\n  <li className=\"list-group-item\"><NavLink className=\"list-group-item list-group-item-action\" to='/results/traceroute'>Traceroute Results</NavLink></li>\n  <li className=\"list-group-item\"><NavLink className=\"list-group-item list-group-item-action\" to='/results/dns'>DNS Results</NavLink></li>\n  <li className=\"list-group-item\"><NavLink className=\"list-group-item list-group-item-action\" to='/results/http'>HTTP Results</NavLink></li>\n  <li className=\"list-group-item\"><NavLink className=\"list-group-item list-group-item-action\" to='/results/tcp'>TCP Results</NavLink></li>\n</ul>\n    );\n}","// here i want to display multiple data in json.\n\nimport React from 'react';\n\n\nexport default  function dns_detail(props){\n\nlet dns_data= [{'values':[{'address':'www.test.com'},{'real_hostname':'190.12.12.1'},{'time_ms':21.3}]},\n{'values':[{'address':'www.example.com'},{'real_hostname':'190.12.12.123'},{'time_ms':23.7}]}\n];\n    return (\n     <React.Fragment>\n{ dns_data.map((item,index)=>{\n\n    return (<div key={index} className=\"card text-left mb-2\">\n    <div className=\"card-body\">\n      <h4 className=\"card-title\">Job {index}</h4>\n      <pre className=\"card-text\"><code>{JSON.stringify(item, undefined, 2)}</code></pre>\n    </div>\n  </div>)\n})}\n\n     </React.Fragment>\n    );\n}","import React from 'react';\nimport {Area,AreaChart,LineChart,Brush, ComposedChart,Bar,Legend, Line, CartesianGrid, XAxis, YAxis, Tooltip } from 'recharts';\n\n\nexport default function dns_graph(props)\n{\n\n    const data = [{name: 'Page A', uv: 400, pv: 2400, amt: 2400},\n    {name: 'Page A', uv: 600, pv: 240, amt: 2400},\n    {name: 'Page A', uv: 200, pv: 2450, amt: 2400},\n    {name: 'Page A', uv: 300, pv: 530, amt: 2400}];\n\n    const renderLineChart = (\n        <div>\n        <ComposedChart syncId=\"anyId\" width={600} height={300} data={data} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\n        <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\n        <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n        <XAxis dataKey=\"pv\" type='number'/>\n        <YAxis />\n        <Tooltip />\n        <Legend/>\n        <Bar dataKey='uv' barSize={50} fill='#413ea0'/>\n       \n      </ComposedChart>\n      <LineChart width={600} height={200} data={data} syncId=\"anyId\"\n      margin={{top: 10, right: 30, left: 0, bottom: 0}}>\n  <CartesianGrid strokeDasharray=\"3 3\"/>\n  <XAxis dataKey=\"uv\" type='number'/>\n  <YAxis/>\n  <Tooltip/>\n  <Line type='monotone' dataKey='pv' stroke='#82ca9d' fill='#82ca9d' />\n  <Brush />\n</LineChart>\n<AreaChart width={600} height={200} data={data} syncId=\"anyId\"\n              margin={{top: 10, right: 30, left: 0, bottom: 0}}>\n          <CartesianGrid strokeDasharray=\"3 3\"/>\n          <XAxis dataKey=\"uv\"type ='number'/>\n          <YAxis/>\n          <Tooltip/>\n          <Area type='monotone' dataKey='pv' stroke='#82ca9d' fill='#82ca9d' />\n        </AreaChart>\n</div>\n    );\n    return (\n        <React.Fragment>\n{renderLineChart}\n</React.Fragment>\n    );\n}","import React from 'react'\nimport Detail from './dns_detail'\nimport Graph from './dns_graph'\n\nexport default class Wrapper extends React.Component{\n\n    constructor(props)\n    {\n        super(props);\n        this.state ={showGraph:false,title:\"show graph\"};\n\n    }\nonClickHandler =()=>{\n    let newTitle = this.state.showGraph?\"show Graph\":\"show Detail\";\n\n    this.setState({showGraph:!this.state.showGraph,title:newTitle});\n\n\n}\n    render(){\n \n    \n        return(\n            <div>\n<button onClick={this.onClickHandler} type=\"button\" className=\"mb-2 btn btn-primary btn-sm\">{this.state.title}</button>\n{this.state.showGraph?(<Graph/>):(<Detail/>)}\n       \n        </div>\n         );\n    }\n}","import React from 'react';\nimport {Container,Col, Row, Button} from 'react-bootstrap'\n\nimport List from './results_list';\nimport {BrowserRouter, Route } from 'react-router-dom';\nimport DNSResult from './dns/dns_wrapper'\nimport DNSGraph from './dns/dns_graph'\n\n\nexport default function MeasurementList() {\n\n\n  return (\n    <BrowserRouter>\n  <Container>\n    <Row>\n      <Col md='3'><List/></Col>\n      <Col md='9'>\n        <Route path='/results/ping' component ={List}/>\n        <Route path='/results/traceroute' component={List}/>\n        <Route path='/results/dns' component={DNSResult}/>\n        <Route path='/results/http' component={DNSGraph}/>\n        <Route path='/results/tcp' component={List}/>\n       </Col>\n    </Row>\n  </Container>\n  </BrowserRouter>\n  );\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/js/bootstrap'\nimport 'jquery/dist/jquery.slim'\nimport 'popper.js'\nimport React from 'react';\nimport './App.css';\nimport CustomLayout from './containers/Layout';\nimport Measurements from './components/measurements/measurements_home';\nimport {BrowserRouter, Route } from 'react-router-dom';\nimport Header from './components/header';\nimport Results from './components/results/results_home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n  \n\n  <BrowserRouter>\n  <Header>   </Header>\n<CustomLayout >\n  \n\n  <Route path ='/run_measurements' component ={Measurements}/>\n  <Route path ='/view_results' component ={Results}/>\n\n</CustomLayout>\n\n</BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}